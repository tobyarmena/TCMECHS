<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_unit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>par_unit</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>path = noone
Speed = 6

x += 16
y += 16

selfPosX = floor((x+16)/32)
selfPosY = floor((y+16)/32)
//mp_grid_add_cell(obj_grid.map_grid,selfPosX,selfPosY)

selected = false;
inAction = false;
hasMoved = false;
update = false;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if global.selected_unit == id
    {
    //show_debug_message(hasMoved)
    
    //if the player is selected and choosing where to move
    if hasMoved == false &amp;&amp; update == false
        {
        scr_reset_movement_grid()
        for (xx = selfPosX -8; xx &lt;= selfPosX +8;xx++)
            for (yy = selfPosY -8; yy &lt;= selfPosY +8;yy++)
            {
            if path_exists(obj_grid.path_check)
                path_delete(obj_grid.path_check)
            obj_grid.path_check = path_add()
            mp_grid_path(obj_grid.map_grid,obj_grid.path_check,x,y,32*xx+16,32*yy+16,0)
            
            if path_get_length(obj_grid.path_check)/32&lt;=4 and path_get_length(obj_grid.path_check)/32&gt;0
                {
                if xx &gt;= 0 &amp;&amp; yy &gt;= 0{
                    obj_grid.movement_grid[xx,yy] = 1
                    }
                }
                
            }
        update = true 
        }
    
    
    //Select path
    if mouse_check_button_pressed(mb_left) and inAction = false and hasMoved == false
        {
        if path_exists(path)
            path_delete(path)
        path = path_add()
        xgoal = 32*floor(mouse_x/32)+16
        ygoal = 32*floor(mouse_y/32)+16
        mp_grid_path(obj_grid.map_grid,path,x,y,xgoal,ygoal,0)
        if path_get_length(path)/32 &lt;= 4
            {
            path_start(path,Speed,path_action_stop,1)
            inAction = true
            }
        }
    selfPosX = floor((x+16)/32)
    selfPosY = floor((y+16)/32)
   
    //Sets actions for when path is completed
    if hasMoved == false //or (inAction == true &amp;&amp; path_position == 1)
        {
        if path_position == 1
            {
            path_position = 0
            hasMoved = true   
            inAction = false
            if path_exists(path)
                path_delete(path)
            }    
        }
    if hasMoved == true
        {
        scr_reset_movement_grid()
        }
    }
else
    {
    inAction = false
    update = false
    if mp_grid_get_cell(obj_grid.map_grid,selfPosX-1,selfPosY-1) == 0
        {
        mp_grid_add_cell(obj_grid.map_grid,selfPosX-1,selfPosY-1)
        }
    }
    


    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
if hasMoved == true 
    draw_sprite_ext(sprite_index,image_index,x,y,1,1,0,c_black,0.7)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
