<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>font = fnt_ingame

option[0,0] = "wait"
option[0,1] = scr_wait

option[1,0] = "attack"
option[1,1] = scr_attack



//set dimensions of window
button_width = 96
button_height = 16

x1 = x-view_xview[0]
y1 = y-view_yview[0]

x2 = x1+button_width
y2 = y1+button_height*array_height_2d(option)

//set dimensions of buttons
for (i = 0;i &lt; array_height_2d(option);i ++)
    {
    option[i,3] = x1
    option[i,4] = y1+(button_height*i)
    
    
    
    }



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button_pressed(mb_left)
    {
    for (i = 0;i &lt; array_height_2d(option);i ++)
        {
        xx1 = option[i,3]+view_xview[0];xx2 = xx1 + button_width
        yy1 = option[i,4]+view_yview[0];yy2 = yy1 + button_height
        
        if mouse_x &gt; xx1 and mouse_x &lt; xx2
            if mouse_y &gt; yy1 and mouse_y &lt; yy2
            {
            script_execute(option[i,1])
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw rectangle
draw_set_color(c_gray)
draw_set_alpha(0.5)
draw_rectangle(x1,y1,x2,y2,false)
draw_set_alpha(1)


//draw text
draw_set_font(font)
draw_set_halign(fa_left)
draw_set_valign(fa_top)
for (i = 0;i &lt; array_height_2d(option);i ++)
    {
    xx1 = option[i,3];xx2 = xx1 + button_width
    yy1 = option[i,4];yy2 = yy1 + button_height
    
    
    
    if mouse_x &gt; xx1 and mouse_x &lt; xx2
        if mouse_y &gt; yy1 and mouse_y &lt; yy2
            {
            draw_set_color(c_white)
            draw_set_alpha(0.4)
            draw_rectangle(xx1,yy1,xx2,yy2,false)
            }  
    draw_set_color(c_white)
    draw_set_alpha(1)
    draw_text(xx1,yy1,option[i,0])   
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
