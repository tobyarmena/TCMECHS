<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hcells = room_width/32
vcells = room_height/32

map_grid = mp_grid_create(0,0,hcells,vcells,32,32)

//initialize movement array
for(xx = 0;xx &lt;= hcells; xx++)
    for(yy = 0;yy &lt;= vcells; yy++)
        {
        movement_grid[xx,yy] = 0
        }


selected_unit = noone

//used for squares check draw event
path_check = noone
path_selecting = noone

//


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_grid</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
for (xx = 0;xx &lt;= room_width/32;xx++)
    {
    for (yy = 0;yy &lt;= room_width/32;yy++)
        {
        //Draw all map grids
        draw_set_alpha(0.5)
        draw_set_color(c_gray)
        draw_rectangle(
            xx*32,
            yy*32,
            xx*32+32,
            yy*32+32,
            true
            )
        draw_set_color(c_white)
        draw_set_alpha(1)
        
        //draw selected unit's movements
        if global.selected_unit != noone{
        if global.selected_unit.inAction = false
            {
                if path_exists(path_check)
                //draw_path(path_check,selected_unit.x,selected_unit.y,false)
                if movement_grid[xx,yy] == 1
                    {
                    
                    draw_set_alpha(0.3)
                    draw_set_color(c_green)
                    draw_rectangle(
                        xx*32,
                        yy*32,
                        xx*32+32,
                        yy*32+32,
                        false
                        )
                    draw_set_color(c_white)
                    draw_set_alpha(1)
                    }
                   }
                  
            
            }
        
        }
    }
show_debug_overlay(true)
    
//draw_selectable path
if global.selected_unit != noone{
if global.selected_unit.inAction == false  &amp;&amp; global.selected_unit.hasMoved == false
    {
    if path_exists(path_selecting)
        path_delete(path_selecting)
    path_selecting = path_add()
    mp_grid_path(map_grid,path_selecting,global.selected_unit.x,global.selected_unit.y,floor(mouse_x/32)*32+16,floor(mouse_y/32)*32+16,0)
    if path_get_length(path_selecting)/32 &lt;= 4
        {
        draw_path(path_selecting,global.selected_unit.x+16,global.selected_unit.y+16,true)
        }
    }
    }
draw_set_alpha(0.1)
mp_grid_draw(map_grid)
draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
